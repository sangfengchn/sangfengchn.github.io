<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>作图 on Sang Feng | 桑峰</title>
    <link>//localhost:4321/categories/%E4%BD%9C%E5%9B%BE/</link>
    <description>Recent content in 作图 on Sang Feng | 桑峰</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:4321/categories/%E4%BD%9C%E5%9B%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>作图-R语言中的冲击图(Alluvial)</title>
      <link>//localhost:4321/post/2021/05/08/blog/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      <guid>//localhost:4321/post/2021/05/08/blog/</guid>
      <description>&lt;p&gt;冲击图可以非常直观地描述一组观测值的多个离散变量的情况。&lt;/p&gt;&#xA;&lt;p&gt;R语言中生成冲击图需要依赖包&lt;strong&gt;ggalluvial&lt;/strong&gt;. 使用以下代码安装依赖包。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;install.packages(&amp;quot;ggalluvial&amp;quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;示例数据&#34;&gt;示例数据&lt;/h1&gt;&#xA;&lt;p&gt;这里用随机生成的虚拟数据作为示例数据&lt;strong&gt;data&lt;/strong&gt;。&lt;strong&gt;data&lt;/strong&gt;中每一行表示一个观测值。其中，每个观测值有三个维度的属性，分别是&lt;strong&gt;A&lt;/strong&gt;，&lt;strong&gt;B&lt;/strong&gt;和&lt;strong&gt;C&lt;/strong&gt;。对于&lt;strong&gt;A&lt;/strong&gt;属性，有&lt;strong&gt;3&lt;/strong&gt;个水平，分别是&lt;strong&gt;a1&lt;/strong&gt;，&lt;strong&gt;a2&lt;/strong&gt;和&lt;strong&gt;a3&lt;/strong&gt;。&lt;strong&gt;B&lt;/strong&gt;属性有&lt;strong&gt;2&lt;/strong&gt;个水平，&lt;strong&gt;C&lt;/strong&gt;属性有&lt;strong&gt;4&lt;/strong&gt;个水平。总共包含&lt;strong&gt;3000&lt;/strong&gt;个观测值。因此，&lt;strong&gt;data&lt;/strong&gt;的大小为&lt;strong&gt;3000*3&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- data.frame(&#xA;  id = seq(1:3000),&#xA;  A = rep(c(&#39;a1&#39;, &#39;a2&#39;, &#39;a3&#39;), 1000),&#xA;  B = rep(c(&#39;b1&#39;, &#39;b2&#39;), 1500),&#xA;  C = rep(c(&#39;c1&#39;, &#39;c2&#39;, &#39;c3&#39;, &#39;c4&#39;), 750)&#xA;)&#xA;knitr::kable(head(data))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;id&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;A&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;B&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;C&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;将数据转换为长格式数据&lt;strong&gt;data_long&lt;/strong&gt;。&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)&#xA;&#xA;data_long &amp;lt;- data %&amp;gt;%&#xA;  as_tibble() %&amp;gt;%&#xA;  pivot_longer(cols=c(A, B, C), names_to = &#39;X&#39;, values_to = &#39;Response&#39;) %&amp;gt;%&#xA;  group_by(X, Response)&#xA;&#xA;data_long %&amp;gt;%&#xA;  head() %&amp;gt;%&#xA;  knitr::kable()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;id&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;X&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Response&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;A&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;a2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;b2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;C&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;c2&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;这里转换为长格式数据的目的在于将&lt;strong&gt;A&lt;/strong&gt;，&lt;strong&gt;B&lt;/strong&gt;和&lt;strong&gt;C&lt;/strong&gt;三个属性和它们的不同水平相互组合。其中&lt;strong&gt;X&lt;/strong&gt;表示不同的属性，将来在冲击图中作为&lt;strong&gt;x轴&lt;/strong&gt;。&lt;strong&gt;Response&lt;/strong&gt;为各属性的不同取值，在图中表示为每个柱子&lt;strong&gt;划分&lt;/strong&gt;的段。原始数据中的1行在长格式数据中被拆分成了3行。&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;绘图代码&#34;&gt;绘图代码&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggalluvial)&#xA;&#xA;ggplot(data_long,&#xA;       aes(x = X, stratum = Response, alluvium = id, fill = Response, label = Response)) +&#xA;  scale_x_discrete(expand = c(.1, .1)) +&#xA;  geom_flow() +&#xA;  geom_stratum(alpha = .5) +&#xA;  geom_text(stat = &amp;quot;stratum&amp;quot;, size = 4) +&#xA;  ylab(&#39;Number of subjects&#39;) +&#xA;  xlab(&#39;&#39;) +&#xA;  theme_classic()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;//localhost:4321/post/2021/05/08/blog/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&#xA;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_42458954/article/details/109106860&#34;&gt;https://blog.csdn.net/qq_42458954/article/details/109106860&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>作图-ggplot2中的直方图和条形图</title>
      <link>//localhost:4321/post/2021/04/19/blog/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>//localhost:4321/post/2021/04/19/blog/</guid>
      <description>&lt;p&gt;本文用于记录ggplot2作图相关的代码，会不定期更新。&lt;/p&gt;&#xA;&lt;p&gt;示例数据格式为&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)&#xA;&#xA;data &amp;lt;- read.csv(&#39;./test.csv&#39;) %&amp;gt;%&#xA;  as_tibble()&#xA;data %&amp;gt;%&#xA;  head() %&amp;gt;%&#xA;  knitr::kable()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;ID&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Gender&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;Age&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Education&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;M&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;M&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;8&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;M&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;12&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;M&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;19&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;H&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;5&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;L&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;6&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;M&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h1 id=&#34;直方图&#34;&gt;直方图&lt;/h1&gt;&#xA;&lt;p&gt;..density..: 指明y轴为频率值，为ggplot2内置的变量。&lt;/p&gt;&#xA;&lt;p&gt;geom_vline: 添加竖直线，线与x轴的交点由xintercept指定。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data %&amp;gt;%&#xA;  ggplot(aes(x=Age, y=..density..)) +&#xA;  geom_histogram(stat = &#39;bin&#39;) +&#xA;  geom_vline(xintercept=mean(data$Age), linetype=&#39;dashed&#39;, color=&#39;blue&#39;) +&#xA;  ylab(&#39;Density&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;//localhost:4321/post/2021/04/19/blog/index_files/figure-html/histogram-1.png&#34; width=&#34;672&#34; /&gt;&#xA;&lt;h1 id=&#34;条形图&#34;&gt;条形图&lt;/h1&gt;&#xA;&lt;p&gt;ggplot2的条形图，每个柱子的高度直接跟输入数据中的某一列对应，其中一个值会产生一个柱子。这跟seaborn包中catplot的逻辑不太一样：它接受一组数对应一个柱子，因此可以自动生成误差线，而不用单独添加。但也可以自定义函数，将数据转换和作图封装起来，达到类似seaborn中catplot的效果&lt;/p&gt;&#xA;&lt;p&gt;geom_errorbar: 为每个柱子添加&lt;strong&gt;标准差线&lt;/strong&gt;，也可以给&lt;strong&gt;折线图&lt;/strong&gt;的每个点添加。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data %&amp;gt;%&#xA;  group_by(Gender) %&amp;gt;%&#xA;  mutate(&#xA;    value=mean(Age),&#xA;    sd=sd(Age)&#xA;  ) %&amp;gt;%&#xA;  ggplot(aes(x=Gender, y=value, fill=Gender)) +&#xA;  geom_col(position = &amp;quot;dodge&amp;quot;, width = 0.3) + &#xA;  geom_errorbar(aes(ymin = value-sd, ymax = value+sd), &#xA;                position = position_dodge(0.9), width = .05) +&#xA;  ylab(&#39;Age&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;img src=&#34;//localhost:4321/post/2021/04/19/blog/index_files/figure-html/barplot-1.png&#34; width=&#34;672&#34; /&gt;&#xA;&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://semba-blog.netlify.app/03/25/2020/barplot-with-errorbar-in-ggplot2/&#34;&gt;https://semba-blog.netlify.app/03/25/2020/barplot-with-errorbar-in-ggplot2/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization&#34;&gt;http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
