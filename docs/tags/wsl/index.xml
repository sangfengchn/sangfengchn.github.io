<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wsl on Sang Feng | 桑峰</title>
    <link>/tags/wsl/</link>
    <description>Recent content in Wsl on Sang Feng | 桑峰</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jun 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/wsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Singularity-03-创建镜像</title>
      <link>/post/2021/06/01/blog/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      <guid>/post/2021/06/01/blog/</guid>
      <description>&lt;p&gt;在Windows 10的Linux子系统（&lt;strong&gt;WLS&lt;/strong&gt;）中安装singularity(version=2.6.0)，并创建镜像。&lt;/p&gt;&#xA;&lt;p&gt;在之前多次尝试中发现，在直接创建.simg镜像时会报告错误（Error: no more available loop devices.），导致创建失败。尝试发现可以通过添加**&amp;ndash;sandbox**参数解决。完整命令如下：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo singularity build --sandbox image_name library/recipes&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;其中，image_name为镜像的名称，library/recipes可以为shub，docker链接或符合singularity语法的配置文件（config.def）。如果在wsl中，输入上述命令后，提示无法找到此命令，而直接输入singularity可以正常显示相关信息。那么可以为singularity创建链接文件解决。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ln -s /usr/local/singularity/bin/singularity /usr/bin/singularit&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置文件实例：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Bootstrap: yum&#xA;&#xA;OSVersion: 7&#xA;&#xA;MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/&#xA;&#xA;Include: yum&#xA;&#xA;%labels&#xA;&#xA;    Python version: 3.9.5&#xA;&#xA;    R version: 4.1.0&#xA;&#xA;&#xA;%post&#xA;&#xA;    yum -y update&#xA;&#xA;    yum -y groupinstall &amp;quot;Development Tools&amp;quot;&#xA;&#xA;    yum install -y gcc gcc-c++ gcc-gfortran java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64&#xA;&#xA;    yum install -y readline-devel bzip2-devel libXt-devel fonts-chinese tcl tcl-devel tclx tk tk-devel mesa-libGLU mesa-libGLU-devel libcurl libcurl-devel xz-devel.x86_64 libjpeg-devel pcre2-devel libtiff-devel libicu-devel which vim&#xA;&#xA;%environment&#xA;&#xA;    export LC_ALL=C&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;奇怪的是，如果把配置文件的名称改为demo.def或test.def，则无法创建镜像。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
